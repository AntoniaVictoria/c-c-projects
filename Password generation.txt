// Password genration
//conditions:
//at least one digit(0-9)
//at least one uppercase character (A-Z)
//at least one lowercase character (a-z)
//at least one special character ( (space) ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~
//minimum length: 5
//maximum length: 15

#include <iostream>
#include <string.h>
#include <stdlib.h>    
#include <time.h> 
using namespace std;
int main()
{
	// password component generation
	char c[1000], i;

	int j = 0;

	for ( i = 32; i <= 126; i++)
	{
		c[j] = i;
	j++;
	}

	for (int b = 0; b < j; b++)
		cout << c[b] << " ";
	cout << endl;
	cout <<j;
	int n;
	srand(time(0));
	cout << endl;
	do {
		cout << "Password length(minimum: 5, maximum: 15):  ";
		cout << "n="; cin >> n;
		if (n < 5 || n>15) cout << "Wrong lenght!";
		else cout << "Correct lenght!";
		cout << endl;	
	} while (n < 5 || n>15);
		int x,h=0,s=0,m=0,M=0,d=0,o=0;
		char p[15];
		cout << endl;
		while (h < n)
		{ label:	x = rand() % 127;
			if( x < 32) goto label;
			if (x >= 65 && x <= 90) M++;
			if (x >= 97 && x <= 122) m++;		
			if (x >= 48 && x <= 57) d++;
			else s++;
			p[o] = x;
			o++;
			h++;	
		}
		if (m >= 1 && M >= 1 && d >= 1 && s >= 1) {
			cout << "Correct generation!"<<endl;
			for (i = 0; i < o; i++) cout << p[i];
		}
		else goto label;
}
		
